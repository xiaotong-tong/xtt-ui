var d=Object.defineProperty;var u=Object.getPrototypeOf;var b=Reflect.get;var h=(s,t,e)=>t in s?d(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var a=(s,t,e)=>(h(s,typeof t!="symbol"?t+"":t,e),e);var n=(s,t,e)=>{if(t.has(s))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(s):t.set(s,e)};var o=(s,t,e)=>b(u(s),e,t);import{x as p}from"./reflect.QJLKHJUk.js";const i=new CSSStyleSheet;i.replaceSync(":host {display:block;}#header {display:grid;width:100%;}#body {display:grid;width:100%;}.cell,.header-cell {min-width:0;}");var c,g;const l=class l extends p{constructor(){super();n(this,c)}static get observedAttributes(){return[]}connectedCallback(){super.connectedCallback()}disconnectedCallback(){super.disconnectedCallback()}attributeChangedCallback(e,y,w){}_reflectElementAdded(e){}get name(){return this.getAttribute("name")}get width(){const e=this.getAttribute("width");return e===null?"auto":Number.isNaN(e)?e:`${e}px`}get label(){return this.getAttribute("label")}};c=new WeakSet,g=function(){return this.shadowRoot.getElementById("column")},a(l,"templateContent",'<div id="column" part="column"><slot></slot></div>'),a(l,"stylesContent",[...o(l,l,"stylesContent"),i]),a(l,"observeOptions",{childList:!0,subtree:!0});let r=l;customElements.define("xtt-grid-column",r);const f=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));export{i as s,f as x};
