var p=Object.defineProperty;var g=Object.getPrototypeOf;var b=Reflect.get;var m=(s,t,e)=>t in s?p(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var n=(s,t,e)=>(m(s,typeof t!="symbol"?t+"":t,e),e),C=(s,t,e)=>{if(!t.has(s))throw TypeError("Cannot "+e)};var r=(s,t,e)=>(C(s,t,"read from private field"),e?e.call(s):t.get(s)),o=(s,t,e)=>{if(t.has(s))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(s):t.set(s,e)};var h=(s,t,e)=>b(g(s),e,t);import{x as f}from"./base.C5bbslE4.js";const u=new CSSStyleSheet;u.replaceSync("");var v=`<xtt-icon id="icon" icon="musicNote"></xtt-icon>
<audio id="audio" ref="sound" preload="metadata"></audio>
`,l,k,a,c;const i=class i extends f{constructor(){super(...arguments);o(this,l);o(this,a)}static get observedAttributes(){return["src"]}attributeChangedCallback(e,w,y){e==="src"&&(this.src=y)}connectedCallback(){this.addEventListener("click",()=>{r(this,a,c).play()}),this.style.opacity=0,r(this,a,c).addEventListener("canplay",()=>{this.style.opacity=1})}get src(){return this.getAttribute("src")}set src(e){if(e===null){this.removeAttribute("src");return}r(this,a,c).src=e}};l=new WeakSet,k=function(){return this.shadowRoot.getElementById("icon")},a=new WeakSet,c=function(){return this.shadowRoot.getElementById("audio")},n(i,"templateContent",v),n(i,"stylesContent",[...h(i,i,"stylesContent"),u]);let d=i;customElements.define("xtt-sound",d);
