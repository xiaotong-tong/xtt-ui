import{l as p,a2 as h,A as d,o,c as k,U as n,m as e}from"./chunks/framework.P0ZUyoFb.js";import{G as r}from"./chunks/lil-gui.esm.J1oMuMs2.js";const c=n(`<h1 id="input-输入框" tabindex="-1">Input 输入框 <a class="header-anchor" href="#input-输入框" aria-label="Permalink to &quot;Input 输入框&quot;">​</a></h1><p>输入框，用于替代原生的 input 元素，提供丰富的样式和功能。</p><section class="operate-wrapper"><div class="operate-content"><xtt-input id="operate" placeholder="placeholder"></xtt-input></div></section><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><section class="wrap"><xtt-input></xtt-input><xtt-input placeholder="placeholder"></xtt-input><xtt-input value="input value"></xtt-input><xtt-input value="readonly value" readonly></xtt-input><xtt-input value="disabled value" disabled></xtt-input></section><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">xtt-input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">xtt-input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> placeholder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;placeholder&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">xtt-input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;input value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">xtt-input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;readonly value&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> readonly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">xtt-input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;disabled value&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> disabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><h2 id="block" tabindex="-1">block <a class="header-anchor" href="#block" aria-label="Permalink to &quot;block&quot;">​</a></h2><p>将输入框转换为块级元素。</p>`,8),u=e("section",{class:"wrap"},[e("xtt-input",{block:""})],-1),E=n('<div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">xtt-input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div>',1),g=[c,u,E],b=JSON.parse('{"title":"Input 输入框","description":"","frontmatter":{},"headers":[],"relativePath":"components/input.md","filePath":"components/input.md"}'),_={name:"components/input.md"},x=Object.assign(_,{setup(y){let t;return p(async()=>{await Promise.all([h(()=>import("./chunks/xtt-input.XL2dQwez.js"),__vite__mapDeps([0,1,2,3,4]))]);const a=document.getElementById("operate");t=new r({container:document.querySelector(".operate-wrapper")});const i={value:"",placeholder:"placeholder",maxWidth:-1,block:!1,readOnly:!1,disabled:!1},l=t.add(i,"value").onChange(s=>{a.value=s});t.add(i,"placeholder").onChange(s=>{a.placeholder=s}),t.add(i,"block").onChange(s=>{a.block=s}),t.add(i,"maxWidth",-1).onChange(s=>{if(s===-1){a.style.maxWidth="";return}a.style.maxWidth=s+"px"}),t.add(i,"readOnly").onChange(s=>{a.readOnly=s}),t.add(i,"disabled").onChange(s=>{a.disabled=s}),a.addEventListener("input",s=>{l.setValue(s.target.value)})}),d(()=>{t.destroy()}),(a,i)=>(o(),k("div",null,g))}});export{b as __pageData,x as default};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["assets/chunks/xtt-input.XL2dQwez.js","assets/chunks/input.mlx352AQ.js","assets/chunks/form.WlgZva0a.js","assets/chunks/base.Wz2wNpMD.js","assets/chunks/xtt-ui-utils.Ke2hgjsQ.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
